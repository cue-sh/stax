# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
before:
  hooks:
    - go mod download
builds:
- env:
  - CGO_ENABLED=0
  goarch:
  - amd64
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'

brews:
  -
    # Name template of the recipe
    # Default to project name
    name: stax

    # IDs of the archives to use.
    # Defaults to all.
    # ids:
    # - foo
    # - bar

    # GOARM to specify which 32-bit arm version to use if there are multiple versions
    # from the build section. Brew formulas support atm only one 32-bit version.
    # Default is 6 for all artifacts or each id if there a multiple versions.
    goarm: 6


    # NOTE: make sure the url_template, the token and given repo (github or gitlab) owner and name are from the
    # same kind. We will probably unify this in the next major version like it is done with scoop.

    # Github repository to push the tap to.
    github:
      owner: TangoGroup
      name: homebrew-tap

    # OR Gitlab
    # gitlab:
    #   owner: gitlab-user
    #   name: homebrew-tap

    # Gitea is not supported yet, but the support coming

    # Template for the url which is determined by the given Token (github or gitlab)
    # Default for github is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    # Default for gitlab is "https://gitlab.com/<repo_owner>/<repo_name>/uploads/{{ .ArtifactUploadHash }}/{{ .ArtifactName }}"
    #url_template: "http://github.mycompany.com/foo/bar/releases/{{ .Tag }}/{{ .ArtifactName }}"

    # Allows you to set a custom download strategy. Note that you'll need
    # to implement the strategy and add it to your tap repository.
    # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
    # Default is empty.
    download_strategy: :github_private_release

    # Allows you to add a custom require_relative at the top of the formula template
    # Default is empty
    custom_require: download_strategy

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: goreleaserbot
      email: goreleaser@carlosbecker.com

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    #folder: Formula

    # Caveats for the user of your binary.
    # Default is empty.
    #caveats: "How to use this binary"

    # Your app's homepage.
    # Default is empty.
    #homepage: "https://example.com/"

    # Your app's description.
    # Default is empty.
    description: "stax is the cli tool to manage cloudformation stacks written in cfn-cue"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
    #skip_upload: true

    # Custom block for brew.
    # Can be used to specify alternate downloads for devel or head releases.
    # Default is empty.
    #custom_block: |
      #head "https://github.com/some/package.git"
      #...

    # Packages your package depends on.
    # dependencies:
    #   - git
    #   - zsh

    # Packages that conflict with your package.
    # conflicts:
    #   - svn
    #   - bash

    # Specify for packages that run as a service.
    # Default is empty.
    # plist: |
    #   <?xml version="1.0" encoding="UTF-8"?>
    #   ...

    # So you can `brew test` your formula.
    # Default is empty.
    # test: |
    #   system "#{bin}/program --version"
    #   ...

    # Custom install script for brew.
    # Default is 'bin.install "program"'.
    # install: |
    #   bin.install "program"
    #   ...